# .github/workflows/ci-scripts-build.yml for use with EPICS Base ci-scripts
# (see: https://github.com/epics-base/ci-scripts)

# This is YAML - indentation levels are crucial

# Set the 'name:' properties to values that work for you (MYMODULE)

name: C/C++ CI

# Trigger on pushes and PRs to any branch
on:
  push:
    branches:
      - master
      - actions-dev
  pull_request:
    branches:
      - master

env:
  SETUP_PATH: .ci-local:.ci
  # For the sequencer on Linux/Windows/MacOS
  APT: re2c
  CHOCO: re2c
  BREW: re2c
  MODULES: "asyn"
  ASYN: master

jobs:
  build-base:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    # Set environment variables from matrix parameters
    env:
      CMP: ${{ matrix.cmp }}
      BCFG: ${{ matrix.configuration }}
      WINE: ${{ matrix.wine }}
      RTEMS: ${{ matrix.rtems }}
      RTEMS_TARGET: ${{ matrix.rtems_target }}
      EXTRA: ${{ matrix.extra }}
      TEST: ${{ matrix.test }}
      TIRPC: YES
    strategy:
      fail-fast: false
      matrix:
        # Job names also name artifacts, character limitations apply
        # For a list of software/compiler versions, see: https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2204-Readme.md
        include:
          - os: ubuntu-latest
            cmp: gcc
            configuration: static
            name: "Ubuntu 22.04, GCC 13 (static)"
            extra: "BUILD_IOCS=YES"
          - os: ubuntu-latest
            cmp: gcc
            configuration: default
            name: "Ubuntu 22.04, GCC 13"
            extra: "BUILD_IOCS=YES"
          - os: ubuntu-latest
            cmp: clang
            configuration: static
            name: "Ubuntu 22.04, Clang 15 (static)"
            extra: "BUILD_IOCS=YES"
          - os: ubuntu-latest
            cmp: clang
            configuration: default
            name: "Ubuntu 22.04, Clang 15"
            extra: "BUILD_IOCS=YES"
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libtirpc-dev
    - name: Automatic core dumper analysis
      uses: mdavidsaver/ci-core-dumper@master
    - name: Prepare and compile dependencies
      run: python .ci/cue.py prepare
    - name: Build main module
      run: python .ci/cue.py build
    - name: Run main module tests
      run: python .ci/cue.py test
    - name: Upload tapfiles Artifact
      uses: actions/upload-artifact@v2
      with:
        name: tapfiles ${{ matrix.name }}
        path: '**/O.*/*.tap'
    - name: Collect and show test results
      run: python .ci/cue.py test-results

