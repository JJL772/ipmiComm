Release: ipmiComm-R1-5-1

04Jun2013 (SH)
Hot swap sensor implementation under NAT is not consistent among modules;
  no longer load hot swap sensor database. Changes:
  drvMchUtil.c, devMch.c

03Jun2013 (SH)
Use manufacturer ID from Get Device ID command to distinguish NAT and Vadatech 
  MCHs; no longer use MAC address. Changes:
    ipimDef.h, ipmiMsg.h: Add definitions for Get Device ID command and for
      vendor manufacturer ID values
    ipmiMsg.c: Test/fix Get Device ID command (previously unused)
    drvMchUtil.c: Change mchIdentify to use manufacturer ID instead of MAC 
      address to identify MCH vendor
    drvMch.c: mchInit: Abort MCH initialization if mchIdentify returns error
    
Release: ipmiComm-R1-5-0

16May2013 (SH)
Many changes, primarily to add support for NAT MCH.
NAT and Vadatech use different message protocols, so:
-Added MCH type (vendor) to data structure and Db
-Determine MCH type using node name and MAC address from /proc/net/arp
-Added type-specific defines, message routines, helper routines
-When reading from MCH, use type-specific offsets into message
-Add support for second-bridged messages (used by some NAT PICMG msgs)
-Replace sensor_hotswap.db with sensor_hotswap_vt.db and sensor_hotswap_nat.db

Other changes:
ipmiMsg.c: Have all msg routines call ipmiWriteReadHelper (even outside 
  of a session); augment ipmiCompletionCode
ipmiDef.c: Change user name to null from 'admin' because latest VT FW
  no longer supports 'admin'

Release: ipmiComm-R1-4-1

08Oct2012 (SH)
devMch.c: When reading sensor value, check that scanning is enabled.
  Else, set record READ/INVALID.
ipmiDef.h: Fix IPMI_SENSOR_SCANNING_DISABLED(x) macro
drvMch.h: Add FRU chassis struct

Release: ipmiComm-R1-4-0

02Oct2012 (SH)
Add PICMG Get Power Level message
  Changes to ipmiMsg.c/.h, ipmiDef.c/.h
Add records and device support to get FRU power levels and info
  Changes to src/devMch.c and Db/module.db
Revive module_cu.db 
Set FRU ID in devSup INP field Card number (not Signal)
Print non-zero completion code information
  Changes to ipmiMsg.c, ipmiDef.h
  New routine ipmiCompletionCode
  Add command and network function arguments to ipmiWriteReadHelper;
    pass these arguments from most ipmi message routines
ipmiMsg.c: ipmiWriteReadHelper: if non-zero completion code, return
  value of code
drvMch.c: during FRU data read if error returned is 'sensor/data
  not present', abort read

01Oct2012 (SH)
src/drvMch.c: Sensor addresses can change when system power cycled, 
  even if FRU configuration is unchanged. Thus if we detect
  MCH was offline, set communication status to 'not initialized'.
src/ipmiMsg.c: ipmiMsgWriteReadHelper: reorganize routine; do not
  check asyn status from ipmiMsgWriteRead; check session sequence number
  in first response (often in send message response) so that NAT and MCH
  checks can be identical (NAT sends one message only).  

27Sep2012 (SH)
NETFN macros no longer include LUN; break LUN and NetFn out. 
Rename IPMI_MSG1_NETFNLUN_OFFSET IPMI_MSG1_NETFN_OFFSET
Changes to src/ipmiDef.c, ipmiDef.h, ipmiMsg.c

Release: ipmiComm-R1-3-3

24Sep2012 (SH)
Check sensor 'reading/state available' before copying
  sensor reading to PV. Changes to:
  src/devMch.c, ipmiDef.c

Release: ipmiComm-R1-3-2

21Sep2012 (SH)
Set message seq number in request and verify response contains same number
  Changes to src/drvMch.c and src/ipmiMsg.c
Handle error returned from SDR read
  Change to src/drvMch.c

Release: ipmiComm-R1-3-1

21Sep2012 (SH)
Fix FRU board and part serial number data type: should be string instead of number
  Changes to Db/module.db and src/devMch.c

27Aug2012 (SH)
src/drvMch.c/.h - Break mchData struct into mchSess (session-related) and mchSys
  (system data). If system was offline, check that all installed FRUs are the same.
   If they are not, set "not initialized" flag, which sets sensor records to INVALID.
src/ipmiMsg.c/.h - Return asyn status from all msg routines. Use mchSess struct
   instead of mchData. Count msg errors, when reaches 10, restart session.
src/devMch.c and ipmiComm.dbd - Add devBiMch bi support with i/o scan support.
   Add support for "initialized" record. Use mchSess/mchSys instead of mchData.
Db/shelf_default.db - New INIT and INITBYP records to reflect if the saved 
   system configuration matches the actual system configuration. Change STAT to bi.

14Aug2012 (SH)
Add PV to enable/disable communication with MCH. Disable closes session.
  Change device support so that it checks enable/disable before sending message.
  Changes to drvMch.h, ipmiMsg.h, devMch.c, shelf_default.db
Increase reply timeout during init, change to drvMch.c

13Aug2012 (SH)
src/ipmiMsg.c/.h - When possible, specify expected msg response length so that 
  we don't have to wait for timeout. Return actual response length to be saved 
  for later write/reads. Keep track of incoming msg sequence numbers. 
  ipmiMsgWriteReadHelper: check msg sequence number and completion code, 
  return status. ipmiMsgReadSensor: add expected msg response length argument. 
  New routine ipmiSetDebug to set debug message flag. Register for ioc shell.
src/drvMch.c - mchPing was not locking mutex properly, fixed. Call asyn connect
  in mchInit. Intialize msg arrays to 0. Remove unneeded malloc/free. Save
  sensor read msg lengths into data structure for use later. 
  mchInit: Always call sensorFruRecordScript, even if device offline in order
  to load the default shelf records.
src/drvMch.h - Add timeout to mchData structure, for asyn reads
src/drvMchUtil.c/.h - sensorFruRecordScript: add argument to indicate device 
  online/configured. If it is not, load only shelf records.
src/devMch.c - In sensor reads, pass expected response length as argument. Check
  return status before setting record val/status. Remove unneeded malloc/free.
  read_mbbi: set reading in rval (not val) and return 0 instead of NO_CONVERT.
  Add debug print statements.
src/ipmiDef.h - Add reply message lengths. Add from-MCH sequence number offset and 
  lengths.
src/ipmiComm.dbd - register drvIpmiRegisterCommands
Db/sensor*.db - Change sensor record scan rate from 5 second to 10 second
Db/module_cu_default.sub - Add sixth fan speed sensor to defaults

