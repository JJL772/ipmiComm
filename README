############################################################
#
#	IPMI module README 
#
#	Auth: Sonya Hoobler
#
#	Last updated: 5 Nov 2013
#
############################################################

To add MicroTCA IPMI support to your application:

1. Add to configure/RELEASE:

IPMICOMM_MODULE_VERSION=ipmiComm-R*-*-*
IPMICOMM=$(EPICS_MODULES)/ipmiComm/$(IPMICOMM_MODULE_VERSION)

2. Add to src/Makefile

IOCManager_DBD  += ipmiComm.dbd
IOCManager_LIBS += ipmiComm

3. Add to Db/Makefile

DB_INSTALLS += $(IPMICOMM)/db/shelf.db

4. Add these lines to st.cmd for each MCH/shelf before iocInit. *Order is important*

Example for mch-b34-cd38:

drvAsynIPPortConfigure ("mch-b34-cd38","mch-b34-cd38:623 udp",0,0,0)
mchInit("mch-b34-cd38")
dbLoadRecords("../../db/shelf.db","dev=CRAT:B34:CD38,link=mch-b34-cd38")


NOTES ON THIS RELEASE
---------------------------

(below, 'ioc' refers to the managment ioc using ipmiComm to communicate 
 with a remote crate. at LCLS, this ioc is a soft ioc called IOCManager.)

-This release supports NAT and Vadatech MCHs

-During ioc boot, the ioc will discover which modules/sensors exist
 for each MCH defined in st.cmd. If the MCH is offline, the ioc will do basic
 initialization and perform the module/sensor discovery later, when it comes online.

-During runtime, if the ioc detects that a MCH system's configuration has changed, it will
 re-discover the modules/sensors and modify the PVs as appropriate.

-There is a EPICS PV $(crat):INIT for each crate/MCH. It is set to "Initialized"
 after all of the modules/sensors have been discovered. It is set to "Not
 initialized" if not. During the discovery process, it is set to "Initializing...".

-No alarm limits or severities have been implemented.

